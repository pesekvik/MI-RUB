var search_data = {"index":{"info":[["Example_1","","Example_1.html","",""],["Input_test","","Input_test.html","",""],["ThereAndBack","","ThereAndBack.html","","<p>Cesta tam a zase zpátky (KS)\n\n<p>Bylo jednou jedno království, ve kterém ke značné nelibosti místní\n…\n"],["ThereAndBack::CityGraph","","ThereAndBack/CityGraph.html","","<p>Encapsulates RGL::DirectedAdjacencyGraph if further additions would be\nneeded\n"],["ThereAndBack::Input","","ThereAndBack/Input.html","","<p>Takes care of input\n"],["ThereAndBack::Response","","ThereAndBack/Response.html","","<p>Encapsulates result into class for different purposes of result showing\n"],["ThereAndBack::ResponseSolution","","ThereAndBack/ResponseSolution.html","","<p>One sollution in response\n"],["ThereAndBack::Runner","","ThereAndBack/Runner.html","","<p>Handles problem implementation\n"],["ThereAndBack::Solver","","ThereAndBack/Solver.html","","<p>Class solving the requested problem\n"],["add_response","ThereAndBack::Response","ThereAndBack/Response.html#method-i-add_response","(graph_original, sollutions)","<p>adds sollutions for input graph\n"],["array_equals","Example_1","Example_1.html#method-i-array_equals","(arr1, arr2)",""],["edge_array","ThereAndBack::Response","ThereAndBack/Response.html#method-i-edge_array","()","<p>resturns results as an array\n"],["new","ThereAndBack::CityGraph","ThereAndBack/CityGraph.html#method-c-new","(edgelist_class = Set, *other_graphs)",""],["new","ThereAndBack::Input","ThereAndBack/Input.html#method-c-new","(arguments)",""],["new","ThereAndBack::Response","ThereAndBack/Response.html#method-c-new","()",""],["new","ThereAndBack::ResponseSolution","ThereAndBack/ResponseSolution.html#method-c-new","(graph_original, sollutions)",""],["new","ThereAndBack::Solver","ThereAndBack/Solver.html#method-c-new","()",""],["parse","ThereAndBack::Input","ThereAndBack/Input.html#method-i-parse","()","<p>parses arguments and returns an array of CityGraph instances parsed from\nthe input. Raises Argument error …\n"],["print_to_file","ThereAndBack::CityGraph","ThereAndBack/CityGraph.html#method-i-print_to_file","()","<p>prints graph to human readable file\n"],["run","ThereAndBack::Runner","ThereAndBack/Runner.html#method-i-run","(arguments)","<p>Handles problem implementation\n"],["setup","Example_1","Example_1.html#method-i-setup","()",""],["setup","Input_test","Input_test.html#method-i-setup","()",""],["solve","ThereAndBack::Solver","ThereAndBack/Solver.html#method-i-solve","(graphs)","<p>solves an array of graphs and returns sollutions for all\n"],["solve_one","ThereAndBack::Solver","ThereAndBack/Solver.html#method-i-solve_one","(graph)","<p>solves one graph instance, solving by brute force 1) get set of all\ndirected edges if graph was full …\n"],["test_1","Example_1","Example_1.html#method-i-test_1","()",""],["test_2","Example_1","Example_1.html#method-i-test_2","()",""],["test_3","Example_1","Example_1.html#method-i-test_3","()",""],["test_input","Input_test","Input_test.html#method-i-test_input","()",""],["to_s","ThereAndBack::Response","ThereAndBack/Response.html#method-i-to_s","()","<p>returns sollution as a string required in assigment\n"],["to_s","ThereAndBack::ResponseSolution","ThereAndBack/ResponseSolution.html#method-i-to_s","()",""],["LICENSE","","LICENSE.html","","<p>cesta_tam_a_zase_zpatky\n<p>Put appropriate LICENSE for your project here.\n"],["README","","README.html","","<p>cesta_tam_a_zase_zpatky\n<p>Rgl needed for this project to work  rgl.rubyforge.org/rgl/index.html can\nbe instaled …\n"],["Rakefile","","Rakefile.html","","<p>#  # To change this template, choose Tools | Templates # and open the\ntemplate in the editor.\n<p>require …\n"],["input","","lib/input_txt.html","","<p>9 měst, 7 silnice, &lt;1, 2&gt;, &lt;2, 3&gt;, &lt;3, 5&gt;, &lt;5, 4&gt;,\n&lt;4, 1&gt;, &lt;1, 5&gt;, …\n"],["rake-d","","nbproject/private/rake-d_txt.html","",""]],"searchIndex":["example_1","input_test","thereandback","citygraph","input","response","responsesolution","runner","solver","add_response()","array_equals()","edge_array()","new()","new()","new()","new()","new()","parse()","print_to_file()","run()","setup()","setup()","solve()","solve_one()","test_1()","test_2()","test_3()","test_input()","to_s()","to_s()","license","readme","rakefile","input","rake-d"],"longSearchIndex":["example_1","input_test","thereandback","thereandback::citygraph","thereandback::input","thereandback::response","thereandback::responsesolution","thereandback::runner","thereandback::solver","thereandback::response#add_response()","example_1#array_equals()","thereandback::response#edge_array()","thereandback::citygraph::new()","thereandback::input::new()","thereandback::response::new()","thereandback::responsesolution::new()","thereandback::solver::new()","thereandback::input#parse()","thereandback::citygraph#print_to_file()","thereandback::runner#run()","example_1#setup()","input_test#setup()","thereandback::solver#solve()","thereandback::solver#solve_one()","example_1#test_1()","example_1#test_2()","example_1#test_3()","input_test#test_input()","thereandback::response#to_s()","thereandback::responsesolution#to_s()","","","","",""]}}